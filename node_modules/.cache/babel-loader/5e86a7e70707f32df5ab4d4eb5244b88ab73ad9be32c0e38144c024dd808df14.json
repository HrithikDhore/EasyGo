{"ast":null,"code":"function Validation(values){let error={};const email_pattern=/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;const password_pattern=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;if(values.name===\"\"){error.name=\"Name should not be empty\";}else{error.name=\"\";}if(values.email===\"\"){error.email=\"Email should not be empty\";}else if(!email_pattern.test(values.email)){error.email=\"Email did't match\";}else{error.email=\"\";}if(values.password==\"\"){error.password=\"Password should not be empty\";}else if(!password_pattern.test(values.password)){error.password=\"Password did't match, Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\";}else{error.password=\"\";}return error;}export default Validation;","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password"],"sources":["D:/projects/easygologin/src/RegisterValidations.js"],"sourcesContent":["function Validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/  \r\n    const password_pattern =/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/ \r\n\r\n    if(values.name === \"\"){\r\n        error.name = \"Name should not be empty\"\r\n   \r\n    }\r\n    else{\r\n        error.name = \"\"\r\n    }\r\n\r\n    if(values.email === \"\"){\r\n        error.email = \"Email should not be empty\"\r\n    }\r\n    else if(!email_pattern.test(values.email)){\r\n            error.email = \"Email did't match\"\r\n    }\r\n    else{\r\n        error.email = \"\"\r\n    }\r\n\r\n    if(values.password == \"\"){\r\n        error.password = \"Password should not be empty\"\r\n    }\r\n    else if(!password_pattern.test(values.password)){\r\n        error.password = \"Password did't match, Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n    }else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n}\r\nexport default Validation;"],"mappings":"AAAA,QAAS,CAAAA,UAAUA,CAACC,MAAM,CAAC,CACvB,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAC,CACd,KAAM,CAAAC,aAAa,CAAG,0CAA0C,CAChE,KAAM,CAAAC,gBAAgB,CAAE,uCAAuC,CAE/D,GAAGH,MAAM,CAACI,IAAI,GAAK,EAAE,CAAC,CAClBH,KAAK,CAACG,IAAI,CAAG,0BAA0B,CAE3C,CAAC,IACG,CACAH,KAAK,CAACG,IAAI,CAAG,EAAE,CACnB,CAEA,GAAGJ,MAAM,CAACK,KAAK,GAAK,EAAE,CAAC,CACnBJ,KAAK,CAACI,KAAK,CAAG,2BAA2B,CAC7C,CAAC,IACI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,CAAC,CAClCJ,KAAK,CAACI,KAAK,CAAG,mBAAmB,CACzC,CAAC,IACG,CACAJ,KAAK,CAACI,KAAK,CAAG,EAAE,CACpB,CAEA,GAAGL,MAAM,CAACO,QAAQ,EAAI,EAAE,CAAC,CACrBN,KAAK,CAACM,QAAQ,CAAG,8BAA8B,CACnD,CAAC,IACI,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,CAC5CN,KAAK,CAACM,QAAQ,CAAG,2IAA2I,CAChK,CAAC,IAAI,CACDN,KAAK,CAACM,QAAQ,CAAG,EAAE,CACvB,CACA,MAAO,CAAAN,KAAK,CAChB,CACA,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}