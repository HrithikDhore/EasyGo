{"ast":null,"code":"import React,{useState}from'react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPassword=()=>{const[email,setEmail]=useState('');const[message,setMessage]=useState('');const[error,setError]=useState('');const handleChange=e=>{setEmail(e.target.value);setMessage('');setError('');};const handleSubmit=e=>{e.preventDefault();// You can add your password reset logic here, such as sending an email to the user with a reset link.\n// For demonstration purposes, let's just show a message that the reset link has been sent.\nsetMessage(\"Password reset link has been sent to \".concat(email));setEmail('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Forgot Password\"}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",children:message}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",placeholder:\"Enter email\",value:email,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Reset Password\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[\"Remember your password? \",/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Login\"})]})]});};export default ForgotPassword;","map":{"version":3,"names":["React","useState","Link","jsx","_jsx","jsxs","_jsxs","ForgotPassword","email","setEmail","message","setMessage","error","setError","handleChange","e","target","value","handleSubmit","preventDefault","concat","className","children","onSubmit","type","placeholder","onChange","to"],"sources":["D:/projects/easygologin/src/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setEmail(e.target.value);\r\n        setMessage('');\r\n        setError('');\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // You can add your password reset logic here, such as sending an email to the user with a reset link.\r\n        // For demonstration purposes, let's just show a message that the reset link has been sent.\r\n        setMessage(`Password reset link has been sent to ${email}`);\r\n        setEmail('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Forgot Password</h2>\r\n            {message && <div className=\"alert alert-success\">{message}</div>}\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Reset Password\r\n                </button>\r\n            </form>\r\n            <p className=\"mt-3\">\r\n                Remember your password? <Link to=\"/\">Login</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CACxBN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACxBN,UAAU,CAAC,EAAE,CAAC,CACdE,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAC,CAED,KAAM,CAAAK,YAAY,CAAIH,CAAC,EAAK,CACxBA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB;AACA;AACAR,UAAU,yCAAAS,MAAA,CAAyCZ,KAAK,CAAE,CAAC,CAC3DC,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAC,CAED,mBACIH,KAAA,QAAKe,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBlB,IAAA,OAAAkB,QAAA,CAAI,iBAAe,CAAI,CAAC,CACvBZ,OAAO,eAAIN,IAAA,QAAKiB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAEZ,OAAO,CAAM,CAAC,CAC/DE,KAAK,eAAIR,IAAA,QAAKiB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAEV,KAAK,CAAM,CAAC,cAC3DN,KAAA,SAAMiB,QAAQ,CAAEL,YAAa,CAAAI,QAAA,eACzBhB,KAAA,QAAKe,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBlB,IAAA,UAAAkB,QAAA,CAAO,eAAa,CAAO,CAAC,cAC5BlB,IAAA,UACIoB,IAAI,CAAC,OAAO,CACZH,SAAS,CAAC,cAAc,CACxBI,WAAW,CAAC,aAAa,CACzBR,KAAK,CAAET,KAAM,CACbkB,QAAQ,CAAEZ,YAAa,CAC1B,CAAC,EACD,CAAC,cACNV,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,gBAElD,CAAQ,CAAC,EACP,CAAC,cACPhB,KAAA,MAAGe,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,0BACQ,cAAAlB,IAAA,CAACF,IAAI,EAACyB,EAAE,CAAC,GAAG,CAAAL,QAAA,CAAC,OAAK,CAAM,CAAC,EAClD,CAAC,EACH,CAAC,CAEd,CAAC,CAED,cAAe,CAAAf,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}