{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email did't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password == \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password did't match, Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["D:/projects/easygologin/src/RegisterValidations.js"],"sourcesContent":["function Validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/  \r\n    const password_pattern =/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/ \r\n\r\n    if(values.name === \"\"){\r\n        error.name = \"Name should not be empty\"\r\n   \r\n    }\r\n    else{\r\n        error.name = \"\"\r\n    }\r\n\r\n    if(values.email === \"\"){\r\n        error.email = \"Email should not be empty\"\r\n    }\r\n    else if(!email_pattern.test(values.email)){\r\n            error.email = \"Email did't match\"\r\n    }\r\n    else{\r\n        error.email = \"\"\r\n    }\r\n\r\n    if(values.password == \"\"){\r\n        error.password = \"Password should not be empty\"\r\n    }\r\n    else if(!password_pattern.test(values.password)){\r\n        error.password = \"Password did't match, Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n    }else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n}\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,0CAA0C;EAChE,MAAMC,gBAAgB,GAAE,uCAAuC;EAE/D,IAAGH,MAAM,CAACI,IAAI,KAAK,EAAE,EAAC;IAClBH,KAAK,CAACG,IAAI,GAAG,0BAA0B;EAE3C,CAAC,MACG;IACAH,KAAK,CAACG,IAAI,GAAG,EAAE;EACnB;EAEA,IAAGJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAC;IACnBJ,KAAK,CAACI,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MACI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IAClCJ,KAAK,CAACI,KAAK,GAAG,mBAAmB;EACzC,CAAC,MACG;IACAJ,KAAK,CAACI,KAAK,GAAG,EAAE;EACpB;EAEA,IAAGL,MAAM,CAACO,QAAQ,IAAI,EAAE,EAAC;IACrBN,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MACI,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAC;IAC5CN,KAAK,CAACM,QAAQ,GAAG,2IAA2I;EAChK,CAAC,MAAI;IACDN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EACA,OAAON,KAAK;AAChB;AAACO,EAAA,GAhCQT,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}