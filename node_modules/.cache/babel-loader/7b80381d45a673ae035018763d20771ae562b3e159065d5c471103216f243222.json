{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\easygologin\\\\src\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setEmail(e.target.value);\n    setMessage('');\n    setError('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // You can add your password reset logic here, such as sending an email to the user with a reset link.\n    // For demonstration purposes, let's just show a message that the reset link has been sent.\n    setMessage(`Password reset link has been sent to ${email}`);\n    setEmail('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: [\"Remember your password? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"+oC6IIAeBPUO7WCSW4CSxdFqDlU=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","error","setError","handleChange","e","target","value","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","to","_c","$RefreshReg$"],"sources":["D:/projects/easygologin/src/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setEmail(e.target.value);\r\n        setMessage('');\r\n        setError('');\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // You can add your password reset logic here, such as sending an email to the user with a reset link.\r\n        // For demonstration purposes, let's just show a message that the reset link has been sent.\r\n        setMessage(`Password reset link has been sent to ${email}`);\r\n        setEmail('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Forgot Password</h2>\r\n            {message && <div className=\"alert alert-success\">{message}</div>}\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Reset Password\r\n                </button>\r\n            </form>\r\n            <p className=\"mt-3\">\r\n                Remember your password? <Link to=\"/\">Login</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}